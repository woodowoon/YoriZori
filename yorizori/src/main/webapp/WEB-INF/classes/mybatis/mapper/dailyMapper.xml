<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daily">
	<select id="seq" resultType="Integer">
		SELECT dailyCook_seq.NEXTVAL FROM dual
	</select>

	<insert id="insertDaily" parameterType="com.sp.yorizori.daily.Daily">
		INSERT INTO dailyCook(dailyNum, userId, subject, dailyContent, hitCount, dailyLink)
		VALUES (#{dailyNum}, #{userId}, #{subject}, #{dailyContent}, 0, #{dailyLink})
	</insert>		

	<insert id="insertDailyFile" parameterType="com.sp.yorizori.daily.Daily">
		INSERT INTO dailyCookphoto(dailyPhotoNum, dailyPhotoName, dailyNum)
		VALUES (dailyCookPhoto_seq.NEXTVAL, #{dailyPhotoName}, #{dailyNum}) 	
	</insert>		
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM dailyCook d
		JOIN member m ON d.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>   
	</select>
	
	<select id="listDaily" parameterType="map" resultType="com.sp.yorizori.daily.Daily">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT d.dailyNum, d.userId, userName, subject, dailyContent, 
				       hitCount, dailyPhotoName,
				       NVL(replyCount, 0) replyCount
				FROM dailyCook d
				JOIN member m ON d.userId=m.userId
				JOIN dailyCookphoto p ON d.dailyNum = p.dailyNum
				LEFT OUTER JOIN (
					SELECT dailyNum, COUNT(*) replyCount FROM dailyCookReply
					WHERE PARENTREPLYNUM = 0
					GROUP BY dailyNum
				) r ON d.dailyNum = r.dailyNum
				<where>
					<if test="keyword != null and keyword != ''">
						<include refid="where-list"/>
					</if>
				</where>
				ORDER BY dailyNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}	
	</select>
	
	<select id="readDaily" parameterType="Integer" resultType="com.sp.yorizori.daily.Daily">
		SELECT d.dailyNum, d.userId, userName, subject, dailyContent, dailyLink,
				hitCount, NVL(dailyLikeCount, 0) dailyLikeCount, dailyPhotoNum, dailyPhotoName
		FROM dailyCook d
		JOIN member m ON d.userId=m.userId
		JOIN dailyCookphoto p ON d.dailyNum = p.dailyNum 
		LEFT OUTER JOIN (
			SELECT dailyNum, COUNT(*) dailyLikeCount FROM dailyCookLike
			GROUP BY dailyNum
		) l ON d.dailyNum = l.dailyNum
        WHERE d.dailyNum = #{dailyNum}	       
        
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE dailyCook SET hitCount=hitCount+1 WHERE dailyNum = #{dailyNum}
	</update>
	
	<select id="preReadDaily" parameterType="map" resultType="com.sp.yorizori.daily.Daily">
		SELECT * FROM (
			SELECT dailyNum, subject
			FROM dailyCook d
			JOIN member m ON d.userId = m.userId
			<where>
				<if test="keyword != null and keyword != '' ">
					<include refid="where-list"/>
				</if>
				AND (dailyNum &gt; #{dailyNum})
			</where>
			ORDER BY dailyNum ASC
		) WHERE ROWNUM = 1	
	</select>
	
	<select id="nextReadDaily" parameterType="map" resultType="com.sp.yorizori.daily.Daily">
		SELECT * FROM (
			SELECT dailyNum, subject
			FROM dailyCook d
			JOIN member m ON d.userId = m.userId
			<where>
				<if test="keyword != null and keyword != '' ">
					<include refid="where-list"/>
				</if>
				AND (dailyNum &lt; #{dailyNum})
			</where>
			ORDER BY dailyNum DESC
		) WHERE ROWNUM = 1
	</select>
	
	<update id="updateDaily" parameterType="com.sp.yorizori.daily.Daily">
		UPDATE dailyCook SET subject=#{subject}, dailyContent=#{dailyContent}, dailyLink=#{dailyLink}
		WHERE dailyNum = #{dailyNum}
	</update>
	
	<delete id="deleteDaily" parameterType="Integer">
		DELETE FROM dailyCook WHERE dailyNum = #{dailyNum}
	</delete>
	
	<select id="listFile" parameterType="Integer" resultType="com.sp.yorizori.daily.Daily">
		SELECT dailyPhotoNum, dailyPhotoName, dailyNum
		FROM dailyCookphoto
		WHERE dailyNum = #{dailyNum}
	</select>
	
	<select id="readFile" parameterType="Integer" resultType="com.sp.yorizori.daily.Daily">
		SELECT dailyPhotoNum, dailyPhotoName, dailyNum
		FROM dailyCookphoto
	    WHERE dailyPhotoNum = #{dailyPhotoNum}      
	</select>
	<select id="readFile2" parameterType="Integer" resultType="com.sp.yorizori.daily.Daily">
		SELECT dailyPhotoNum, dailyPhotoName, dailyNum
		FROM dailyCookphoto
	    WHERE dailyNum = #{dailyNum}    
	</select>
	
	<update id="updateFile" parameterType="com.sp.yorizori.daily.Daily">
		UPDATE dailyCookphoto SET dailyPhotoName = #{dailyPhotoName} WHERE dailyPhotoNum = #{dailyPhotoNum}
	</update>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM dailyCookphoto WHERE ${field} = #{dailyNum}
	</delete>
	
	
	

	<insert id="insertDailyLike" parameterType="map">
		INSERT INTO dailyCookLike(dailyNum, userId) VALUES (#{dailyNum}, #{userId})
	</insert>

	<delete id="deleteDailyLike" parameterType="map">
		DELETE FROM dailyCookLike WHERE dailyNum = #{dailyNum} AND userId = #{userId}
	</delete>
      
	<select id="dailyLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM dailyCookLike WHERE dailyNum=#{dailyNum}
	</select>

	<select id="userDailyLiked" parameterType="map" resultType="com.sp.yorizori.daily.Daily">
		SELECT dailyNum, userId FROM dailyCookLike WHERE dailyNum = #{dailyNum} AND userId = #{userId}
	</select>
	
	
	
	

	<insert id="insertReply" parameterType="com.sp.yorizori.daily.DailyReply">
		INSERT INTO dailyCookReply(replyNum, dailyNum, userId, replyContent, reg_date, parentreplyNum)
		VALUES (dailyCookReply_seq.NEXTVAL, #{dailyNum}, #{userId}, #{replyContent}, SYSDATE, #{parentreplyNum})
	</insert>

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM dailyCookReply
		WHERE dailyNum=#{dailyNum} AND parentreplyNum=0
	</select>

	<select id="listReply" parameterType="map" resultType="com.sp.yorizori.daily.DailyReply">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT r.replyNum, r.userId, userName, r.dailyNum, replyContent, r.reg_date, 
				       NVL(answerCount, 0) answerCount,
				       NVL(likeCount, 0) likeCount,
				       NVL(disLikeCount, 0) disLikeCount
				FROM dailyCookReply r
				JOIN member m ON r.userId = m.userId
				LEFT OUTER JOIN (
					SELECT parentreplyNum, COUNT(*) answerCount
					FROM dailyCookReply WHERE parentreplyNum!=0 GROUP BY parentreplyNum
				) a ON r.replyNum = a.parentreplyNum
				LEFT OUTER JOIN (
					SELECT dailyNum, COUNT(DECODE(replyLike, 1, 1)) likeCount,
						   COUNT(DECODE(replyLike, 0, 1)) disLikeCount
					FROM dailyCookLike GROUP BY dailyNum
				) c ON r.dailyNum = c.dailyNum
				WHERE r.dailyNum=#{dailyNum} AND r.parentreplyNum=0
				ORDER BY r.replyNum DESC
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM dailyCookReply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR parentreplyNum=#{replyNum}
		</if>
	</delete>
	
	<select id="listReplyAnswer" parameterType="Integer" resultType="com.sp.yorizori.daily.DailyReply">
		SELECT replyNum, dailyNum, r.userId, userName, replyContent, reg_date, parentreplyNum
		FROM dailyCookReply r
		JOIN member m ON r.userId = m.userId
		WHERE parentreplyNum = #{parentreplyNum}
		ORDER BY replyNum DESC
	</select>
	

	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM dailyCookReply WHERE parentreplyNum = #{parentreplyNum}
	</select>

	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO dailyCookLike(replyNum, userId, replyLike)
		VALUES (#{replyNum}, #{userId}, #{replyLike})
	</insert>

	<select id="replyLikeCount" parameterType="map" resultType="map">
		SELECT COUNT(DECODE(replyLike, 1, 1)) likeCount,
			   COUNT(DECODE(replyLike, 0, 1)) disLikeCount
		FROM dailyCookLike WHERE replyNum = #{replyNum}
	</select>
	
	
</mapper>