<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="recipe">
	<!-- 재료시퀀스 -->
	<select id="recipeseq" resultType="Integer">
		SELECT recipe_seq.NEXTVAL FROM dual
	</select>
	<!-- 상황별 카테고리 -->
	<select id="listcaseCategory" parameterType="map" resultType="com.sp.yorizori.recipe.Recipe">
		SELECT caseNum, caseName FROM caseCategory
			ORDER BY caseNum
	</select>
	
	<!-- 나라별 카테고리 -->
	<select id="listcountryCategory" parameterType="map" resultType="com.sp.yorizori.recipe.Recipe">
		SELECT countryNum, countryName FROM countryCategory
			ORDER BY countryNum
	</select>
	
	<!-- 재료 카테고리 -->
	<select id="listingredient" parameterType="map" resultType="com.sp.yorizori.recipe.Recipe">
		SELECT ingredientCode, ingredientName, NVL(parent, 0) parent, ingredimageName
		FROM ingredient
		<where>
			<choose>
				<when test="parent==null">
					parent IS NULL
				</when>
				<otherwise>
					parent = #{parent}
				</otherwise>
			</choose>
		</where>
		ORDER BY ingredientCode
	</select>
	
	<!-- 레시피 등록 -->
	<insert id="insertRecipe" parameterType="com.sp.yorizori.recipe.Recipe">
		INSERT INTO recipe (recipeNum, caseNum, countryNum, recipeSubject, recipeHitcount, recipeReg_date, recipeServing, recipeLevel, 
   			 recipeContent, recipeTime,userId, active) VALUES 
   		(#{recipeNum}, #{caseNum}, #{countryNum}, #{recipeSubject}, 0, SYSDATE, 
   		#{recipeServing}, #{recipeLevel}, #{recipeContent, jdbcType=VARCHAR}, #{recipeTime}, #{userId}, 0)
	</insert>
	
	<!-- 레시피 포토 등록 -->
	<insert id="insertRecipePhoto" parameterType="com.sp.yorizori.recipe.Recipe">
		INSERT INTO recipePhoto (recipenum, recipephotoName) VALUES (#{recipeNum}, #{imageFilename, jdbcType=VARCHAR})
	</insert>
	
	<!-- 레시피 재료 등록 -->
	<insert id="insertingredientList" parameterType="com.sp.yorizori.recipe.Recipe">
		INSERT INTO ingredientList (num, recipeNum , ingredientCode) VALUES (ingredientList_seq.NEXTVAL, #{recipeNum}, #{ingredientCode})
	</insert>
	
	<!-- 좋아요 개수 -->
	<select id="recipeLikeCount" resultType="Integer">
		SELECT COUNT(*) recipeLikeCount FROM recipeLike WHERE recipeNum = #{recipeNum}
	</select>
	
	<!-- 팔로우 유무 -->
	<select id="isFollow" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM follow WHERE follower_id = #{userId}
	</select>
	
	<select id="dataCount" resultType="Integer" parameterType="map">
		SELECT COUNT(*)
		FROM recipe r
		JOIN member m ON m.userId = r.userId
		LEFT OUTER JOIN (
		    SELECT follower_id, following_id FROM follow
	    ) f ON r.userId = f.following_id 
	    <where>
			<choose>
				<when test="isFollow == true">
					follower_id = #{userId} OR (m.userId = #{userId})
				</when>
				<otherwise>
					r.countryNum = #{userCountryNum} OR (m.userId = #{userId})
				</otherwise>
			</choose>
		</where>

	</select>
	
	<!-- feed -->
	<select id="listRecipeFeed" resultType="com.sp.yorizori.recipe.Recipe" parameterType="map">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT r.recipeNum recipeNum, r.countryNum countryNum, recipeSubject, nickName, memberImageName, imageFilename, 
		            NVL(recipeLikeCount, 0) recipeLikeCount, follower_id
		            FROM recipe r
		            JOIN member m ON m.userId = r.userId
		                LEFT OUTER JOIN (
		                    SELECT recipeNum, COUNT(*) recipeLikeCount FROM recipeLike
		                    GROUP BY recipeNum
		                ) rl ON rl.recipeNum = r.recipeNum  
		                LEFT OUTER JOIN (
		                    SELECT userId, memberImageName FROM memberImage 
		                ) mi ON mi.userId = r.userId
		                LEFT OUTER JOIN (
		                    SELECT recipeNum, recipePhotoName imageFilename FROM recipePhoto
		                ) rp ON r.recipeNum = rp.recipeNum
		                LEFT OUTER JOIN (
		                    SELECT follower_id, following_id FROM follow
		                ) f ON r.userId = f.following_id
		             <where>
						<choose>
							<when test="isFollow == true">
								follower_id = #{userId} OR (m.userId = #{userId})
							</when>
							<otherwise>
								r.countryNum = #{userCountryNum} OR (m.userId = #{userId})
							</otherwise>
						</choose>		             
		             </where>
		            ORDER BY recipeLikeCount DESC
		        ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	
	
</mapper>